name: Promote Endpoint

on:
  workflow_dispatch:

env:
  MANIFESTS_REPOSITORY: weni-ai/kubernetes-manifests-artificial-intelligence
  MANIFESTS_APPLICATION: runpod-proxy

jobs:
  promote_endpoint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Python Dependencies
        run: pip install requests

      - name: Promote Staging to Production - RunPod
        id: promote
        run: python -u runpod.py promote
        working-directory: .github/workflows
        env:
          RUNPOD_TOKEN: ${{ secrets.RUNPOD_TOKEN }}
          RUNPOD_SOURCE_ENDPOINT: "zeroshot-endpoint-preview"
          RUNPOD_TARGET_ENDPOINT: "zeroshot-endpoint"

      - name: Check out Kubernetes Manifests
        uses: actions/checkout@v3
        with:
          ref: main
          repository: ${{ env.MANIFESTS_REPOSITORY }}
          token: ${{ secrets.DEVOPS_GITHUB_PERMANENT_TOKEN }}
          path: ./kubernetes-manifests/

      - name: Update values on Deployment
        run: |
          MANIFESTS_ENVIRONMENTS=("develop" "production")

          for ENV in "${MANIFESTS_ENVIRONMENTS[@]}"; do
              MANIFESTS_PATCH_TARGET="${ENV}/deployment.json"
              if [ -f "$MANIFESTS_PATCH_TARGET" ]; then
                  cat <<< $(jq --arg new_endpoint "${{ steps.promote.outputs.endpoint }}" '.[0].value = $new_endpoint' $MANIFESTS_PATCH_TARGET) > $MANIFESTS_PATCH_TARGET
              fi
          done
        working-directory: kubernetes-manifests/${{ env.MANIFESTS_APPLICATION }}

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.DEVOPS_GITHUB_PERMANENT_TOKEN }}
          repository: "${{ env.MANIFESTS_REPOSITORY }}"
          directory: ./kubernetes-manifests
          branch: main
          message: "From Zeroshot (${{ env.MANIFESTS_ENVIRONMENT }})"
