name: Build and Push Docker Image

on:
  push:
    tags:
      - '*.*.*-develop'
      - '*.*.*-staging'
      - '*.*.*'

env:
  DOCKER_IMAGE: ilhasoft/worker-runpod-vllm

jobs:
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: type=ref,event=tag
          flavor: latest=false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  patch_endpoints:
    name: Patch Endpoints Repository
    runs-on: ubuntu-latest
    needs:
      - build_and_push
    strategy:
      matrix:
        file:
          - zeroshot
    env:
      ENDPOINTS_REPOSITORY: weni-ai/runpod-endpoints
    steps:
      - name: Check out Kubernetes Manifests
        uses: actions/checkout@v3
        with:
          ref: main
          repository: ${{ env.ENDPOINTS_REPOSITORY }}
          token: ${{ secrets.DEVOPS_GITHUB_PERMANENT_TOKEN }}

      - name: Update values on config
        env:
          IMAGE_TAG: ${{ env.DOCKER_IMAGE }}:${{ needs.build_and_push.outputs.version }}
        run: |
          ENV_TARGET=$(echo ${{ needs.build_and_push.outputs.version }} | grep -Eo 'staging|develop' || echo 'production')

          PATCH_TARGET="${ENV_TARGET}/${{ matrix.file }}.yaml"

          if [ -f "$PATCH_TARGET" ]; then
            yq -i ".endpoint.imageName = \"${{ env.IMAGE_TAG }}\"" $PATCH_TARGET
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.DEVOPS_GITHUB_PERMANENT_TOKEN }}
          commit-message: Auto-update file ${{ matrix.file }}
          branch: update/${{ matrix.file }}/${{ needs.build_and_push.outputs.version }}
          title: Update ${{ matrix.file }} with Revision ${{ needs.build_and_push.outputs.version }}
